package Controller;

import java.util.ArrayList;
import java.util.List;

import DTO.TransactionDTO;
import Dao.AccountDaoImpl;
import Model.Account;
import View.AccountListingPage;
import View.TransactionListingPage;

public class TransactionListingController extends BaseController {
	
	public TransactionListingPage view;
	private AccountDaoImpl accountDao;
	private Account account;
	private int type;
	
	public TransactionListingController(Account account,int type) {
		super(new TransactionListingPage());
		this.type = type;
		this.account = account;
		this.accountDao = new AccountDaoImpl();
		this.authenticate();
	}

	@Override
	public void initController() {
		this.view = (TransactionListingPage) this.getView();
		String[] columns = this.view.getColumns();
		this.view.createDataTable(fetchTransactionData(), columns);
	}
	
	public String[][] fetchTransactionData() {
		List<TransactionDTO> transactions = new ArrayList<TransactionDTO>();
		
		if(type == 0) {
			transactions = accountDao.getAllTransaction(account);
		}else if(type == 1) {
			transactions = accountDao.getAllDepositTransaction(account);
		}else if(type == 2) {
			transactions = accountDao.getAllWithDrawlTransaction(account);
		}
		
		String[][] transactionArray = new String[transactions.size()][this.view.getColumns().length];
		int rowCount = 0;
		for (TransactionDTO transaction : transactions) {
			transactionArray[rowCount][0] = transaction.getTransactionId() + "";
			transactionArray[rowCount][1] = transaction.getAccountType()+"";
			transactionArray[rowCount][2] = transaction.getCreatedAt()+"";
			transactionArray[rowCount][3] = transaction.getNumber() + "";
			transactionArray[rowCount][4] = transaction.getAmount() + "";
			transactionArray[rowCount][5] = transaction.getDescription();
			rowCount++;
		}
		return transactionArray;
	}
}
