package Controller;

import java.util.List;

import DTO.BranchDTO;
import Dao.BranchDaoImpl;
import Model.Branch;
import Model.Branch;
import View.BranchCreateForm;
import View.BranchListingPage;
import View.BranchUpdateForm;

public class BranchListingController extends BaseController {
	
	private BranchListingPage view;
	private BranchDaoImpl branchDao;
	
	public BranchListingController() {
		super(new BranchListingPage());
		this.branchDao = new BranchDaoImpl();
		this.authenticate();
	}
	

	@Override
	public void initController() {
		this.view =(BranchListingPage) this.getView();
		String[] columns = this.view.getColumns();
		this.view.createDataTable(getBranchData(),columns);
		this.view.getCreateButton().addActionListener(e -> handleBranchCreateButtonAction());
		this.view.getUpdateButton().addActionListener(e -> handleBranchUpdateButtonAction());
		this.view.getDeleteButton().addActionListener(e -> handleBranchDeleteButtonAction());
	}
	
	public String[][] getBranchData(){
		List<Branch> branches = branchDao.getAll();
		String[][] BranchArray = new String[branches.size()][this.view.getColumns().length];
		int rowCount = 0;
		for(Branch Branch : branches) {
			BranchArray[rowCount][0] = Branch.getId()+""; 
			BranchArray[rowCount][1] = Branch.getName();
			BranchArray[rowCount][2] = Branch.getAddress();
			BranchArray[rowCount][3] = Branch.getPhoneNumber();
			rowCount++;
		}
		return BranchArray;
	}


	private void handleBranchDeleteButtonAction() {
		
	}


	private void handleBranchUpdateButtonAction() {
		new BranchUpdateController();
	}


	private void handleBranchCreateButtonAction() {
		new BranchCreateController();
	}

}
