package View;


import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class TransferMoneyWindow extends BaseWindow{
	
    private JLabel sourceAccLabel;
    private JTextField sourceAccTextField;
    private JLabel targetAccLabel;
    private JTextField targetAccField;
    private JLabel amountLabel;
    private JTextField amountField;
    private JLabel descLabel;
    private JTextField descField;
    private JButton transferButton;
    private JButton cancelButton;

    public JLabel getSourceAccLabel() {
		return sourceAccLabel;
	}

	public void setSourceAccLabel(JLabel sourceAccLabel) {
		this.sourceAccLabel = sourceAccLabel;
	}

	public JTextField getTargetAccField() {
		return targetAccField;
	}

	public void setTargetAccField(JTextField targetAccField) {
		this.targetAccField = targetAccField;
	}

	public JTextField getAmountField() {
		return amountField;
	}

	public void setAmountField(JTextField amountField) {
		this.amountField = amountField;
	}

	public JTextField getDescField() {
		return descField;
	}

	public void setDescField(JTextField descField) {
		this.descField = descField;
	}

	public JButton getTransferButton() {
		return transferButton;
	}

	public void setTransferButton(JButton transferButton) {
		this.transferButton = transferButton;
	}

	public TransferMoneyWindow() {
        
        setTitle("Transfer Money");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridBagLayout()); 

       
        sourceAccLabel = new JLabel("Source Account:");
        sourceAccTextField = new JTextField(15);

        targetAccLabel = new JLabel("Target Account:");
        targetAccField = new JTextField(15);

        amountLabel = new JLabel("Amount:");
        amountField = new JTextField(15);

        descLabel = new JLabel("Description:");
        descField = new JTextField(15);

        transferButton = new JButton("Transfer");
        cancelButton = new JButton("Cancel");

        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5); 
        gbc.fill = GridBagConstraints.HORIZONTAL;

      
        gbc.gridx = 0;
        gbc.gridy = 0;
        add(sourceAccLabel, gbc);

        gbc.gridx = 1;
        add(sourceAccTextField, gbc);

        
        gbc.gridx = 0;
        gbc.gridy = 1;
        add(targetAccLabel, gbc);

        gbc.gridx = 1;
        add(targetAccField, gbc);

       
        gbc.gridx = 0;
        gbc.gridy = 2;
        add(amountLabel, gbc);

        gbc.gridx = 1;
        add(amountField, gbc);

       
        gbc.gridx = 0;
        gbc.gridy = 3;
        add(descLabel, gbc);

        gbc.gridx = 1;
        add(descField, gbc);

       
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 1; 
        add(transferButton, gbc);

        gbc.gridx = 1;
        add(cancelButton, gbc);

        
        transferButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                performTransfer();
            }
        });

        cancelButton.addActionListener(e -> clearFields());
    }

    private void performTransfer() {
        // Perform transfer logic here
        String sourceAccount = sourceAccTextField.getText();
        String targetAccount = targetAccField.getText();
        String amount = amountField.getText();
        String description = descField.getText();
        
        // Validate and process transaction
        if (sourceAccount.isEmpty() || targetAccount.isEmpty() || amount.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            double amountValue = Double.parseDouble(amount);
            if (amountValue <= 0) {
                JOptionPane.showMessageDialog(this, "Amount must be greater than zero.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, "Transfer successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid amount format.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearFields() {
        sourceAccTextField.setText("");
        targetAccField.setText("");
        amountField.setText("");
        descField.setText("");
    }

}
